plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hanium'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'mysql:mysql-connector-java'
	implementation 'mysql:mysql-connector-java:8.0.31'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	//@Size 어노테이션을 위한 라이브러리
	implementation 'javax.validation:validation-api:2.0.1.Final'
	// QueryDSL 라이브러리
	implementation 'com.querydsl:querydsl-core'
	// QueryDSL JPA 라이브러리
	implementation 'com.querydsl:querydsl-jpa'
	// QueryDSL 관련된 쿼리 타입(QClass)을 생성할 때 필요한 라이브러리로, annotationProcessor을 사용하여 추가
	annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
	// java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	//Jasypt(Java Simplified Encryption)를 사용하여 설정 파일을 암호화
	implementation 'org.jasypt:jasypt:1.9.2'
	// Jasypt properties 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	//mysql
	implementation 'mysql:mysql-connector-java:8.0.32'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
//	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
	useJUnitPlatform()
}
// clean task를 실행 시 QClass를 삭제
clean {
	// QClass가 생성되는 위치
	delete file('src/main/generated')
}
